// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "categories",
    checkConstraints: {
      categories_xata_id_length_xata_id: {
        name: "categories_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      parent_id_link: {
        name: "parent_id_link",
        columns: ["parent_id"],
        referencedTable: "categories",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_categories_xata_id_key: {
        name: "_pgroll_new_categories_xata_id_key",
        columns: ["xata_id"],
      },
      categories__pgroll_new_slug_key: {
        name: "categories__pgroll_new_slug_key",
        columns: ["slug"],
      },
    },
    columns: [
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "is_active",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: "false",
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "parent_id",
        type: "link",
        link: { table: "categories" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"categories"}',
      },
      {
        name: "slug",
        type: "text",
        notNull: false,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "deletion_requests",
    checkConstraints: {
      deletion_requests_xata_id_length_xata_id: {
        name: "deletion_requests_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_deletion_requests_xata_id_key: {
        name: "_pgroll_new_deletion_requests_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "completed_at",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "integration_slug",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "platform",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "'pending'::text",
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "integrations",
    checkConstraints: {
      integrations_xata_id_length_xata_id: {
        name: "integrations_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_integrations_xata_id_key: {
        name: "_pgroll_new_integrations_xata_id_key",
        columns: ["xata_id"],
      },
      integrations__pgroll_new_slug_key: {
        name: "integrations__pgroll_new_slug_key",
        columns: ["slug"],
      },
    },
    columns: [
      {
        name: "is_active",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "settings",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "slug",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "invoices",
    checkConstraints: {
      invoices_xata_id_length_xata_id: {
        name: "invoices_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_invoices_xata_id_key: {
        name: "_pgroll_new_invoices_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "amount",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "createdAt",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "dueDate",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "hostedInvoiceUrl",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "periodEnd",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "periodStart",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeCustomerId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeEmail",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeInvoiceId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_accounts",
    checkConstraints: {
      nextauth_accounts_xata_id_length_xata_id: {
        name: "nextauth_accounts_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_accounts_xata_id_key: {
        name: "_pgroll_new_nextauth_accounts_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "access_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "expires_at",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "provider",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "providerAccountId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "refresh_token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "scope",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "session_state",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "token_type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_sessions",
    checkConstraints: {
      nextauth_sessions_xata_id_length_xata_id: {
        name: "nextauth_sessions_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_sessions_xata_id_key: {
        name: "_pgroll_new_nextauth_sessions_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "expires",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sessionToken",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_users",
    checkConstraints: {
      nextauth_users_xata_id_length_xata_id: {
        name: "nextauth_users_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_users_xata_id_key: {
        name: "_pgroll_new_nextauth_users_xata_id_key",
        columns: ["xata_id"],
      },
      nextauth_users__pgroll_new_email_key: {
        name: "nextauth_users__pgroll_new_email_key",
        columns: ["email"],
      },
    },
    columns: [
      {
        name: "email",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "emailVerified",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "image",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "password",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "profile",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: "'user'::text",
        comment: "",
      },
      {
        name: "stripeCustomerId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeEmail",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeMetadata",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_users_accounts",
    checkConstraints: {
      nextauth_users_accounts_xata_id_length_xata_id: {
        name: "nextauth_users_accounts_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      account_link: {
        name: "account_link",
        columns: ["account"],
        referencedTable: "nextauth_accounts",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_users_accounts_xata_id_key: {
        name: "_pgroll_new_nextauth_users_accounts_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "account",
        type: "link",
        link: { table: "nextauth_accounts" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_accounts"}',
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_users_sessions",
    checkConstraints: {
      nextauth_users_sessions_xata_id_length_xata_id: {
        name: "nextauth_users_sessions_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      session_link: {
        name: "session_link",
        columns: ["session"],
        referencedTable: "nextauth_sessions",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_users_sessions_xata_id_key: {
        name: "_pgroll_new_nextauth_users_sessions_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "session",
        type: "link",
        link: { table: "nextauth_sessions" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_sessions"}',
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "nextauth_verificationTokens",
    checkConstraints: {
      nextauth_verificationTokens_xata_id_length_xata_id: {
        name: "nextauth_verificationTokens_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_nextauth_verificationTokens_xata_id_key: {
        name: "_pgroll_new_nextauth_verificationTokens_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "expires",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "identifier",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "token",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "order_items",
    checkConstraints: {
      order_items_xata_id_length_xata_id: {
        name: "order_items_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      order_id_link: {
        name: "order_id_link",
        columns: ["order_id"],
        referencedTable: "orders",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      product_id_link: {
        name: "product_id_link",
        columns: ["product_id"],
        referencedTable: "products",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_order_items_xata_id_key: {
        name: "_pgroll_new_order_items_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "order_id",
        type: "link",
        link: { table: "orders" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"orders"}',
      },
      {
        name: "price_at_time",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product_id",
        type: "link",
        link: { table: "products" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"products"}',
      },
      {
        name: "quantity",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "subtotal",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "orders",
    checkConstraints: {
      orders_xata_id_length_xata_id: {
        name: "orders_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_orders_xata_id_key: {
        name: "_pgroll_new_orders_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "billing_address",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "meta",
        type: "json",
        notNull: true,
        unique: false,
        defaultValue: "'{}'::json",
        comment: "",
      },
      {
        name: "payment_method",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shipping_address",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "shipping_amount",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "tax_amount",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "total_amount",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "pages",
    checkConstraints: {
      pages_xata_id_length_xata_id: {
        name: "pages_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      owner_link: {
        name: "owner_link",
        columns: ["owner"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_pages_xata_id_key: {
        name: "_pgroll_new_pages_xata_id_key",
        columns: ["xata_id"],
      },
      pages__pgroll_new_uri_key: {
        name: "pages__pgroll_new_uri_key",
        columns: ["path"],
      },
    },
    columns: [
      {
        name: "is_homepage",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
        comment: "",
      },
      {
        name: "is_published",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "false",
        comment: "",
      },
      {
        name: "markdown_content",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "owner",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "path",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "title",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "products",
    checkConstraints: {
      products_xata_id_length_xata_id: {
        name: "products_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      category_id_link: {
        name: "category_id_link",
        columns: ["category_id"],
        referencedTable: "categories",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_products_xata_id_key: {
        name: "_pgroll_new_products_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "category_id",
        type: "link",
        link: { table: "categories" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"categories"}',
      },
      {
        name: "deleted_at",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "description",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "images",
        type: "multiple",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "inventory_count",
        type: "int",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "is_active",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: "false",
        comment: "",
      },
      {
        name: "meta",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "name",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "price",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "sku",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "shopping_cart_items",
    checkConstraints: {
      shopping_cart_items_xata_id_length_xata_id: {
        name: "shopping_cart_items_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      cart_id_link: {
        name: "cart_id_link",
        columns: ["cart_id"],
        referencedTable: "shopping_carts",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      product_id_link: {
        name: "product_id_link",
        columns: ["product_id"],
        referencedTable: "products",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_shopping_cart_items_xata_id_key: {
        name: "_pgroll_new_shopping_cart_items_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "cart_id",
        type: "link",
        link: { table: "shopping_carts" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"shopping_carts"}',
      },
      {
        name: "price_at_time",
        type: "float",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "product_id",
        type: "link",
        link: { table: "products" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"products"}',
      },
      {
        name: "quantity",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "shopping_carts",
    checkConstraints: {
      shopping_carts_xata_id_length_xata_id: {
        name: "shopping_carts_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      "session_id session_id_link": {
        name: "session_id session_id_link",
        columns: ["session_id session_id"],
        referencedTable: "nextauth_sessions",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_id_link: {
        name: "user_id_link",
        columns: ["user_id"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_shopping_carts_xata_id_key: {
        name: "_pgroll_new_shopping_carts_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "session_id session_id",
        type: "link",
        link: { table: "nextauth_sessions" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_sessions"}',
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "social_content",
    checkConstraints: {
      social_content_xata_id_length_xata_id: {
        name: "social_content_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_social_content_xata_id_key: {
        name: "_pgroll_new_social_content_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "interval_monitor",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "86400",
        comment: "",
      },
      {
        name: "is_monitored",
        type: "bool",
        notNull: true,
        unique: false,
        defaultValue: "true",
        comment: "",
      },
      {
        name: "last_processed",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "metadata",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "network_slug",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "post_url",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "social_networks",
    checkConstraints: {
      social_networks_xata_id_length_xata_id: {
        name: "social_networks_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {},
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_social_networks_xata_id_key: {
        name: "_pgroll_new_social_networks_xata_id_key",
        columns: ["xata_id"],
      },
      social_networks__pgroll_new_name_key: {
        name: "social_networks__pgroll_new_name_key",
        columns: ["name"],
      },
      social_networks__pgroll_new_network_id_key: {
        name: "social_networks__pgroll_new_network_id_key",
        columns: ["network_id"],
      },
      social_networks__pgroll_new_short_slug_key: {
        name: "social_networks__pgroll_new_short_slug_key",
        columns: ["short_slug"],
      },
      social_networks__pgroll_new_slug_key: {
        name: "social_networks__pgroll_new_slug_key",
        columns: ["slug"],
      },
    },
    columns: [
      {
        name: "name",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "network_id",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue: "0",
        comment: "",
      },
      {
        name: "short_slug",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "slug",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "social_profiles",
    checkConstraints: {
      social_profiles_xata_id_length_xata_id: {
        name: "social_profiles_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_social_profiles_xata_id_key: {
        name: "_pgroll_new_social_profiles_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "network_id",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "network_user_id",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "username",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "subscriptions",
    checkConstraints: {
      subscriptions_xata_id_length_xata_id: {
        name: "subscriptions_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_subscriptions_xata_id_key: {
        name: "_pgroll_new_subscriptions_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "billingCycle",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "cancelAtPeriodEnd",
        type: "bool",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "canceledAt",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "currency",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "currentPeriodEnd",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "currentPeriodStart",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "plan",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "planAmount",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeCustomerId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripePlanId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "stripeSubscriptionId",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "tier",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "totalAmount",
        type: "float",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
  {
    name: "webhook_events",
    checkConstraints: {
      webhook_events_xata_id_length_xata_id: {
        name: "webhook_events_xata_id_length_xata_id",
        columns: ["xata_id"],
        definition: "CHECK ((length(xata_id) < 256))",
      },
    },
    foreignKeys: {
      integration_link: {
        name: "integration_link",
        columns: ["integration"],
        referencedTable: "integrations",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
      user_link: {
        name: "user_link",
        columns: ["user"],
        referencedTable: "nextauth_users",
        referencedColumns: ["xata_id"],
        onDelete: "SET NULL",
      },
    },
    primaryKey: [],
    uniqueConstraints: {
      _pgroll_new_webhook_events_xata_id_key: {
        name: "_pgroll_new_webhook_events_xata_id_key",
        columns: ["xata_id"],
      },
    },
    columns: [
      {
        name: "event_type",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "integration",
        type: "link",
        link: { table: "integrations" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"integrations"}',
      },
      {
        name: "metadata",
        type: "json",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "platform",
        type: "text",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "processed_at",
        type: "datetime",
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "status",
        type: "text",
        notNull: false,
        unique: false,
        defaultValue: "'pending'::text",
        comment: "",
      },
      {
        name: "user",
        type: "link",
        link: { table: "nextauth_users" },
        notNull: false,
        unique: false,
        defaultValue: null,
        comment: '{"xata.link":"nextauth_users"}',
      },
      {
        name: "xata_createdat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: "('rec_'::text || (xata_private.xid())::text)",
        comment: "",
      },
      {
        name: "xata_updatedat",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: "now()",
        comment: "",
      },
      {
        name: "xata_version",
        type: "int",
        notNull: true,
        unique: false,
        defaultValue: "0",
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type DeletionRequests = InferredTypes["deletion_requests"];
export type DeletionRequestsRecord = DeletionRequests & XataRecord;

export type Integrations = InferredTypes["integrations"];
export type IntegrationsRecord = Integrations & XataRecord;

export type Invoices = InferredTypes["invoices"];
export type InvoicesRecord = Invoices & XataRecord;

export type NextauthAccounts = InferredTypes["nextauth_accounts"];
export type NextauthAccountsRecord = NextauthAccounts & XataRecord;

export type NextauthSessions = InferredTypes["nextauth_sessions"];
export type NextauthSessionsRecord = NextauthSessions & XataRecord;

export type NextauthUsers = InferredTypes["nextauth_users"];
export type NextauthUsersRecord = NextauthUsers & XataRecord;

export type NextauthUsersAccounts = InferredTypes["nextauth_users_accounts"];
export type NextauthUsersAccountsRecord = NextauthUsersAccounts & XataRecord;

export type NextauthUsersSessions = InferredTypes["nextauth_users_sessions"];
export type NextauthUsersSessionsRecord = NextauthUsersSessions & XataRecord;

export type NextauthVerificationTokens =
  InferredTypes["nextauth_verificationTokens"];
export type NextauthVerificationTokensRecord = NextauthVerificationTokens &
  XataRecord;

export type OrderItems = InferredTypes["order_items"];
export type OrderItemsRecord = OrderItems & XataRecord;

export type Orders = InferredTypes["orders"];
export type OrdersRecord = Orders & XataRecord;

export type Pages = InferredTypes["pages"];
export type PagesRecord = Pages & XataRecord;

export type Products = InferredTypes["products"];
export type ProductsRecord = Products & XataRecord;

export type ShoppingCartItems = InferredTypes["shopping_cart_items"];
export type ShoppingCartItemsRecord = ShoppingCartItems & XataRecord;

export type ShoppingCarts = InferredTypes["shopping_carts"];
export type ShoppingCartsRecord = ShoppingCarts & XataRecord;

export type SocialContent = InferredTypes["social_content"];
export type SocialContentRecord = SocialContent & XataRecord;

export type SocialNetworks = InferredTypes["social_networks"];
export type SocialNetworksRecord = SocialNetworks & XataRecord;

export type SocialProfiles = InferredTypes["social_profiles"];
export type SocialProfilesRecord = SocialProfiles & XataRecord;

export type Subscriptions = InferredTypes["subscriptions"];
export type SubscriptionsRecord = Subscriptions & XataRecord;

export type WebhookEvents = InferredTypes["webhook_events"];
export type WebhookEventsRecord = WebhookEvents & XataRecord;

export type DatabaseSchema = {
  categories: CategoriesRecord;
  deletion_requests: DeletionRequestsRecord;
  integrations: IntegrationsRecord;
  invoices: InvoicesRecord;
  nextauth_accounts: NextauthAccountsRecord;
  nextauth_sessions: NextauthSessionsRecord;
  nextauth_users: NextauthUsersRecord;
  nextauth_users_accounts: NextauthUsersAccountsRecord;
  nextauth_users_sessions: NextauthUsersSessionsRecord;
  nextauth_verificationTokens: NextauthVerificationTokensRecord;
  order_items: OrderItemsRecord;
  orders: OrdersRecord;
  pages: PagesRecord;
  products: ProductsRecord;
  shopping_cart_items: ShoppingCartItemsRecord;
  shopping_carts: ShoppingCartsRecord;
  social_content: SocialContentRecord;
  social_networks: SocialNetworksRecord;
  social_profiles: SocialProfilesRecord;
  subscriptions: SubscriptionsRecord;
  webhook_events: WebhookEventsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Mauricio-Otta-s-workspace-rr8013.us-west-2.xata.sh/db/dbwebsites",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
